import numpy as np
import matplotlib.pyplot as plt

# Define the domain and grid parameters
Nx, Ny = 50, 50
Lx, Ly = 1.0, 1.0
dx, dy = Lx / (Nx - 1), Ly / (Ny - 1)

# Create the grid
x = np.linspace(0, Lx, Nx)
y = np.linspace(0, Ly, Ny)
X, Y = np.meshgrid(x, y)

# Define the heat source term
Q = np.zeros((Nx, Ny))
radius = 0.2
center = (0.5, 0.5)
Q[(X - center[0])**2 + (Y - center[1])**2 <= radius**2] = 100

# Initialize the temperature matrix with zeros
T = np.zeros((Nx, Ny))

# Set Dirichlet boundary conditions
T[:, 0] = T[:, -1] = T[0, :] = T[-1, :] = 0

# Iterative solution using central differences
max_iterations = 1000
for iteration in range(max_iterations):
    T_old = T.copy()
    for i in range(1, Nx - 1):
        for j in range(1, Ny - 1):
            T[i, j] = 0.25 * (T[i + 1, j] + T[i - 1, j] + T[i, j + 1] + T[i, j - 1] - dx**2 * Q[i, j])

# Plot the numerical solution
plt.contourf(X, Y, T, cmap='hot', levels=20)
plt.title('Steady-State Temperature Distribution')
plt.colorbar(label='Temperature')
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.show()
